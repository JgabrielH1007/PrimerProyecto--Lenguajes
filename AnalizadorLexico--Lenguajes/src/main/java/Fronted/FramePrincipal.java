/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Fronted;

import Backend.LectorTexto;
import Backend.Optimizador;
import Exceptions.ExceptionToken;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;

/**
 *
 * @author gabrielh
 */
public class FramePrincipal extends javax.swing.JFrame {

    private String textoCompleto;

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        setTitle("Analizador Léxico");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        iniciarLista();
        txaEditor.addCaretListener(e -> {
            int pos = txaEditor.getCaretPosition();
            try {
                int fila = txaEditor.getLineOfOffset(pos) + 1;  // Obtener la fila (línea)
                int columna = pos - txaEditor.getLineStartOffset(fila - 1) + 1;  // Obtener la columna
                lblPosicioCursor.setText("Fila: " + fila + ", Columna: " + columna);  // Actualizar la etiqueta
            } catch (BadLocationException ex) {
                ex.printStackTrace();
            }
        });
        txaEditor.getDocument().addDocumentListener(new DocumentListener() {
            public void updateLineNumbers() {
                int caretPosition = txaEditor.getDocument().getLength();
                Element root = txaEditor.getDocument().getDefaultRootElement();
                StringBuilder text = new StringBuilder("1\n");

                for (int i = 2; i <= root.getElementIndex(caretPosition) + 1; i++) {
                    text.append(i).append("\n");
                }
                txaListaNumero.setText(text.toString());
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateLineNumbers();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateLineNumbers();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateLineNumbers();
            }
        });

        // Ajustar el diseño del JFrame
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txaEditor = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jbtHTML = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaListaNumero = new javax.swing.JTextArea();
        lblPosicioCursor = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuReportes = new javax.swing.JMenu();
        itemReportesToken = new javax.swing.JMenuItem();
        itemReportesOpti = new javax.swing.JMenuItem();
        itemReporteErrores = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txaEditor.setColumns(20);
        txaEditor.setFont(new java.awt.Font("Hack", 0, 15)); // NOI18N
        txaEditor.setRows(5);
        jScrollPane1.setViewportView(txaEditor);

        jButton1.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        jButton1.setText("Optimizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jbtHTML.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        jbtHTML.setText("Exportar HTML");
        jbtHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtHTMLActionPerformed(evt);
            }
        });

        txaListaNumero.setColumns(20);
        txaListaNumero.setRows(5);
        jScrollPane2.setViewportView(txaListaNumero);

        lblPosicioCursor.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        lblPosicioCursor.setText("Fila: 1 , Columna: 1");

        menuReportes.setText("Reportes");
        menuReportes.setFont(new java.awt.Font("Hack", 1, 15)); // NOI18N

        itemReportesToken.setFont(new java.awt.Font("Hack", 0, 12)); // NOI18N
        itemReportesToken.setText("Reportes de Tokens");
        menuReportes.add(itemReportesToken);

        itemReportesOpti.setFont(new java.awt.Font("Hack", 0, 12)); // NOI18N
        itemReportesOpti.setText("Reporte de Optimizacion");
        itemReportesOpti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReportesOptiActionPerformed(evt);
            }
        });
        menuReportes.add(itemReportesOpti);

        itemReporteErrores.setFont(new java.awt.Font("Hack", 0, 12)); // NOI18N
        itemReporteErrores.setText("Reporte de Errores");
        menuReportes.add(itemReporteErrores);

        jMenuBar1.add(menuReportes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtHTML, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                    .addComponent(lblPosicioCursor, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtHTML)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPosicioCursor)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void iniciarLista() {
        txaListaNumero.setEnabled(false);
        txaEditor.setVisible(true);
        txaEditor.setEditable(true);
        txaEditor.setColumns(51); // Define un ancho de 20 columnas
        txaEditor.setFont(new Font("Monospaced", Font.PLAIN, 12)); // Fuente monoespaciada para alineación
        jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

// Configurar el JTextArea para los números de línea
        txaListaNumero.setEditable(false);
        txaListaNumero.setVisible(true);
        txaListaNumero.setBackground(Color.white);
        txaListaNumero.setFont(new Font("Monospaced", Font.PLAIN, 12)); // Misma fuente que txaEditor
        jScrollPane2.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER); // Deshabilitar barra de desplazamiento vertical en jScrollPane2

        // Sincronizar los scrolls de ambos JScrollPane
        jScrollPane2.getViewport().setView(txaListaNumero);
        jScrollPane1.getVerticalScrollBar().setModel(jScrollPane2.getVerticalScrollBar().getModel());
    }


    private void itemReportesOptiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReportesOptiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemReportesOptiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Optimizador op = new Optimizador();
        try {
            // Obtener el texto del editor y optimizarlo
            Map<String, List<String>> resultado = op.optimizarTexto(txaEditor.getText());

            // Construir un String a partir de las listas de HTML, CSS y JS
            StringBuilder contenidoFinal = new StringBuilder();

            // Concatenar el contenido de cada lista en su sección correspondiente
            for (String html : resultado.get("html")) {
                contenidoFinal.append(html).append("\n");
            }

            for (String css : resultado.get("css")) {
                contenidoFinal.append(css).append("\n");
            }

            for (String js : resultado.get("js")) {
                contenidoFinal.append(js).append("\n");
            }

            // Mostrar el contenido concatenado en el área de texto del editor
            txaEditor.setText(contenidoFinal.toString());

        } catch (ExceptionToken ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtHTMLActionPerformed
        // TODO add your handling code here:
        LectorTexto verificar = new LectorTexto();
        try {
            verificar.leerTexto(txaEditor.getText());

} catch (ExceptionToken ex) {
            Logger.getLogger(FramePrincipal.class  

.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtHTMLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemReporteErrores;
    private javax.swing.JMenuItem itemReportesOpti;
    private javax.swing.JMenuItem itemReportesToken;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtHTML;
    private javax.swing.JLabel lblPosicioCursor;
    private javax.swing.JMenu menuReportes;
    private javax.swing.JTextArea txaEditor;
    private javax.swing.JTextArea txaListaNumero;
    // End of variables declaration//GEN-END:variables
}
